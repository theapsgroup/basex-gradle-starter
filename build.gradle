buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.0'
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    maven { url "http://files.basex.org/maven" }
    maven { url "http://xqj.net/maven" }
    mavenCentral()
    mavenLocal()
}

// distributions will be called basex-demo-0.1.zip
applicationName = 'basex-demo'
version = '0.1'
mainClassName = 'org.basex.BaseXHTTP'
applicationDefaultJvmArgs = [
    "-Dorg.basex.dbpath=${System.properties['org.basex.DBPATH']}",
    "-Dorg.basex.repopath=${System.properties['org.basex.REPOPATH']}",
    "-Dorg.basex.webpath=${System.properties['org.basex.WEBPATH']}",
    "-Dorg.basex.mixupdates=${System.properties['org.basex.MIXUPDATES']}",
    "-Dorg.basex.globallock=${System.properties['org.basex.GLOBALLOCK']}",
    "-Dorg.basex.chop=${System.properties['org.basex.CHOP']}",
    "-Dorg.basex.cacherestxq=${System.properties['org.basex.CACHERESTXQ']}"
]

applicationDistribution.from("basex") {
  include "**/*.*"
  into "basex"
}

def jettyVersion = '8.1.18.v20150929'

// see files.basex.org/maven/org/basex/basex-parent/8.3.1/basex-parent-8.3.1.pom

dependencies {

    runtime "org.basex:basex-api:8.4-SNAPSHOT"
    runtime "net.xqj:basex-xqj:1.6.0"
    runtime "org.xmldb:xmldb-api:1.0"
    runtime "commons-fileupload:commons-fileupload:1.3.1"
    runtime "com.vividsolutions:jts:1.13"
    runtime "org.slf4j:slf4j-simple:1.7.12"
    runtime "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    runtime("com.ettrema:milton-api:1.8.1.4") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
	
    // optional
    runtime "jp.sourceforge.igo:igo:0.4.3"
    runtime "org.apache:lucene-stemmers:3.4.0"
    runtime "org.ccil.cowan.tagsoup:tagsoup:1.2.1"
    runtime "xml-resolver:xml-resolver:1.2"
    runtime "jline:jline:2.13"
    runtime("com.thaiopensource:jing:20091111") {
        exclude group: 'xerces', module: 'xercesImpl'
        exclude group: 'xml-apis', module: 'xml-apis'
        exclude group: 'net.sf.saxon', module: 'saxon'
        exclude group: 'isorelax', module: 'isorelax'
    }
    runtime "net.sf.saxon:Saxon-HE:9.7.0-1"

	// MySQL database connector
	// Connection example: sql:connect('jdbc:mysql://host:port/database', 'user', 'password')
	// runtime 'mysql:mysql-connector-java:5.1.36'
	
	// Oracle database connector
	// Download ojdbc7.jar from: http://www.oracle.com/technetwork/database/features/jdbc/default-2280470.html
	// Then install in local maven repository by running:
	// mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.2 -Dpackaging=jar -DgeneratePom=true -Dfile=ojdbc7.jar
	// Connection example: sql:connect('jdbc:oracle:thin:@host:port:service', 'user', 'password')
	// runtime 'com.oracle:ojdbc7:12.1.0.2'
}

// shadowPlugin adds a promo banner task, no thanks!
tasks.remove(knows)

task server(type: JavaExec) {
    description "Start BaseX database server."
    classpath configurations.runtime
    main = "org.basex.BaseXServer"
    systemProperties System.getProperties()
}

task serverstop(type: JavaExec) {
    description "Stop BaseX HTTP server."
    classpath configurations.runtime
    main = "org.basex.BaseXServer"
    args "stop"
    systemProperties System.getProperties()
}

// alias for gradlew run
task http(dependsOn: run) {
    description "Run BaseX HTTP and database server."
}

task httpstart << {
	ant.java(
		fork: true,
		spawn: true,
		classpath: configurations.runtime.asPath, 
		className: "org.basex.BaseXHTTP",
		clonevm: true
	)
}
httpstart.description "Start BaseX HTTP and database server in background."


task httpstop(type: JavaExec) {
    description "Stop BaseX HTTP and database server."
    classpath configurations.runtime
    main = "org.basex.BaseXHTTP"
    args "stop"
    systemProperties System.getProperties()
}

// although typing works, the standard gradle build message
// makes this awkward. 
// See also https://issues.gradle.org/browse/GRADLE-1168
task console(type: JavaExec) {
    description "Start BaseX client console."
    standardInput = System.in
    classpath configurations.runtime
    main = "org.basex.BaseX"
    systemProperties System.getProperties()
}

task query(type: JavaExec) {
    description "Start a simple query."
    classpath configurations.runtime
    main = "org.basex.BaseX"
    args "-q", project.hasProperty('q') ? q : "'Please provide a query! Example: gradlew query -Pq=1+1'"
    systemProperties System.getProperties()
}

task create(type: JavaExec) {
    description "Create a database and import XML files from a directory."
    classpath configurations.runtime
    main = "org.basex.BaseX"
    args "-c", project.hasProperty('dir') && project.hasProperty('db') ? "CREATE DB $db ${file(dir)}" : "'Please provide a db and dir! Example: gradlew create -Pdb=foo -Pdir=bar'"
    systemProperties System.getProperties()
}

task export(type: JavaExec) {
    description "Create a database and import XML files from a directory."
    classpath configurations.runtime
    main = "org.basex.BaseX"
    args "-c", project.hasProperty('dir') && project.hasProperty('db') ? "OPEN $db\nEXPORT ${file(dir)}" : "'Please provide a db and dir! Example: gradlew export -Pdb=foo -Pdir=bar'"
    systemProperties System.getProperties()
}

task xqtest(type: JavaExec) {
    description "Runs all tests."
    def xqDir = file(System.properties['org.basex.WEBPATH'])
    inputs.dir xqDir
    classpath configurations.runtime
    main = "org.basex.BaseX"
    args "-t", file(System.properties['org.basex.WEBPATH'])
    systemProperties System.getProperties()
    ignoreExitValue true
}

task command(type: JavaExec) {
    description "Execute BaseX commands from file or string provided as -Pc=<file|\"string\">"
    classpath configurations.runtime
    main = "org.basex.BaseX"
    args "-c", project.hasProperty('c') ? c : "XQUERY 'Please provide command using -Pc=file.bxs or -Pc=&quot;string&quot;'"
    systemProperties System.getProperties()
}

task gui << {
    ant.java(
        fork: true, 
        spawn: true, 
        classpath: configurations.runtime.asPath, 
        classname: "org.basex.BaseXGUI",
        clonevm: true)
}
gui.description "Run BaseX GUI."
